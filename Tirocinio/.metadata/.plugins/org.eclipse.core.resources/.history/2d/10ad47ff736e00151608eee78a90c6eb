package it.sp4te.CooperativeSpectrumSensing.GraphGenerator;

import java.util.List;
import static com.googlecode.charts4j.Color.*;
import static com.googlecode.charts4j.UrlUtil.normalize;
import static org.junit.Assert.assertEquals;

import java.awt.BorderLayout;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

import org.junit.BeforeClass;
import org.junit.Test;

import com.googlecode.charts4j.AxisLabels;
import com.googlecode.charts4j.AxisLabelsFactory;
import com.googlecode.charts4j.AxisStyle;
import com.googlecode.charts4j.AxisTextAlignment;
import com.googlecode.charts4j.Color;
import com.googlecode.charts4j.Data;
import com.googlecode.charts4j.Fills;
import com.googlecode.charts4j.GCharts;
import com.googlecode.charts4j.Line;
import com.googlecode.charts4j.LineChart;
import com.googlecode.charts4j.LineStyle;
import com.googlecode.charts4j.LinearGradientFill;
import com.googlecode.charts4j.Plots;
import com.googlecode.charts4j.Shape;

public class GraphGenerator {

	
	public static void drawGraph(ArrayList<Double> snr,ArrayList<Double> detection ) throws IOException{

		
		 Line line1 = Plots.newLine(Data.newData(detection), Color.newColor("CA3D05"), "Energy Detection");
	        line1.setLineStyle(LineStyle.newLineStyle(3, 1, 0));
	        line1.addShapeMarkers(Shape.DIAMOND, Color.newColor("CA3D05"), 12);
	        line1.addShapeMarkers(Shape.DIAMOND, Color.WHITE, 8);
	       
	        LineChart chart = GCharts.newLineChart(line1);
	        chart.setSize(600, 450);
	        chart.setTitle("Energy Detection in Cooperative Spectrum Sensing", WHITE, 14);
	        
	        AxisStyle axisStyle = AxisStyle.newAxisStyle(WHITE, 12, AxisTextAlignment.CENTER);
	        
	        AxisLabels yAxis = AxisLabelsFactory.newNumericRangeAxisLabels(0, 100);
	        yAxis.setAxisStyle(axisStyle);
	        
	        AxisLabels xAxis1 = AxisLabelsFactory.newNumericRangeAxisLabels(-30, 5);
	        xAxis1.setAxisStyle(axisStyle);
	        
	        AxisLabels xAxis3 = AxisLabelsFactory.newAxisLabels("SNR (Decibel)", 50.0);
	        xAxis3.setAxisStyle(AxisStyle.newAxisStyle(WHITE, 14, AxisTextAlignment.CENTER));
	        
	        AxisLabels yAxis3 = AxisLabelsFactory.newAxisLabels("% of Detection", 50.0);
	        yAxis3.setAxisStyle(AxisStyle.newAxisStyle(WHITE, 14, AxisTextAlignment.CENTER));
	        
	        chart.addXAxisLabels(xAxis1);
	        chart.addYAxisLabels(yAxis);
	        chart.addXAxisLabels(xAxis3);
	        chart.addYAxisLabels(yAxis3);
	     
	        chart.setBackgroundFill(Fills.newSolidFill(Color.newColor("1F1D1D")));
	        LinearGradientFill fill = Fills.newLinearGradientFill(0, Color.newColor("363433"), 100);
	        fill.addColorAndOffset(Color.newColor("2E2B2A"), 0);
	        chart.setAreaFill(fill);
	        String url = chart.toURLString();
	        displayUrlString(chart.toURLString());
	    }
	private static void displayUrlString(final String urlString) throws IOException{
        JFrame frame = new JFrame();
        JLabel label = new JLabel(new ImageIcon(ImageIO.read(new URL(urlString))));
        frame.getContentPane().add(label, BorderLayout.CENTER);
        frame.pack();
        frame.setVisible(true);
         
	}
}
